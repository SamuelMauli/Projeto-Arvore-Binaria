# Sistema de Cadastro de Funcion√°rios com √Årvore Bin√°ria üå≥

**Autores**: Samuel Mauli & Luiz Gabriel  
**Disciplina**: Estrutura de Dados Aplicadas  

Um sistema eficiente para gerenciamento de funcion√°rios utilizando √Årvore Bin√°ria de Pesquisa (BST) como estrutura principal. Desenvolvido em C puro para avalia√ß√£o acad√™mica.

---

## üöÄ Funcionalidades Principais
1. **Cadastro de Funcion√°rios**  
   - Inser√ß√£o com matr√≠cula √∫nica (evita duplicatas)
   - Valida√ß√£o autom√°tica de matr√≠cula existente

2. **Gest√£o de Dados**  
   - Atualiza√ß√£o de nome, cargo e sal√°rio
   - Remo√ß√£o segura de registros
   - Busca instant√¢nea por matr√≠cula

3. **Visualiza√ß√£o**  
   - Listagem ordenada por matr√≠cula
   - Exibi√ß√£o detalhada de registros individuais

---

## üõ†Ô∏è Tecnologias Utilizadas
- **Linguagem**: C11 Standard
- **Estrutura de Dados**: √Årvore Bin√°ria de Pesquisa (BST)
- **Algoritmos**:
  - Inser√ß√£o/Remo√ß√£o recursiva
  - Travessia em ordem
  - Busca bin√°ria otimizada

---

## ‚öôÔ∏è Estrutura da √Årvore
```c
typedef struct no {
    int matricula;          // Chave √∫nica
    char nome[50];          // Nome completo
    char cargo[50];         // Fun√ß√£o do colaborador
    float salario;          // Remunera√ß√£o
    struct no *esq, *dir;   // Filhos esquerdo/direito
} 
```
---

## üìù Observa√ß√µes T√©cnicas

# Gerenciamento de Mem√≥ria:
Libera√ß√£o recursiva p√≥s-uso para evitar leaks

# Estrat√©gia de Remo√ß√£o:
Substitui√ß√£o pelo menor n√≥ da sub√°rvore direita

# Interface:
Sistema de buffers robusto para entrada de dados

